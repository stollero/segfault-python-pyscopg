services:
  backend:
    build:
      context: backend
    environment:
      - POSTGRES_PASSWORD=example
      - PYTHONFAULTHANDLER=1
      - MALLOC_CHECK_=3
    depends_on:
      db:
        condition: service_healthy
    command: gunicorn -w 4 -b :8000 app:app
    ports:
      - 8000:8000

  consumer:
    build:
      context: consumer
    depends_on:
      - backend
    deploy:
      replicas: 10


  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./sql/create.sql:/docker-entrypoint-initdb.d/create.sql
      - ./sql/fill.sql:/docker-entrypoint-initdb.d/fill.sql
    environment:
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD=example
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
